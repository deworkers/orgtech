/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-name: 'arrow';
@arrow-x: 113px;
@arrow-y: 86px;
@arrow-offset-x: -113px;
@arrow-offset-y: -86px;
@arrow-width: 8px;
@arrow-height: 5px;
@arrow-total-width: 167px;
@arrow-total-height: 136px;
@arrow-image: '../img/sprite.png';
@arrow: 113px 86px -113px -86px 8px 5px 167px 136px '../img/sprite.png' 'arrow';
@arrow-sm-name: 'arrowSm';
@arrow-sm-x: 140px;
@arrow-sm-y: 95px;
@arrow-sm-offset-x: -140px;
@arrow-sm-offset-y: -95px;
@arrow-sm-width: 6px;
@arrow-sm-height: 9px;
@arrow-sm-total-width: 167px;
@arrow-sm-total-height: 136px;
@arrow-sm-image: '../img/sprite.png';
@arrow-sm: 140px 95px -140px -95px 6px 9px 167px 136px '../img/sprite.png' 'arrowSm';
@arrow-white-name: 'arrowWhite';
@arrow-white-x: 113px;
@arrow-white-y: 71px;
@arrow-white-offset-x: -113px;
@arrow-white-offset-y: -71px;
@arrow-white-width: 25px;
@arrow-white-height: 15px;
@arrow-white-total-width: 167px;
@arrow-white-total-height: 136px;
@arrow-white-image: '../img/sprite.png';
@arrow-white: 113px 71px -113px -71px 25px 15px 167px 136px '../img/sprite.png' 'arrowWhite';
@call-name: 'call';
@call-x: 0px;
@call-y: 0px;
@call-offset-x: 0px;
@call-offset-y: 0px;
@call-width: 100px;
@call-height: 71px;
@call-total-width: 167px;
@call-total-height: 136px;
@call-image: '../img/sprite.png';
@call: 0px 0px 0px 0px 100px 71px 167px 136px '../img/sprite.png' 'call';
@close-name: 'close';
@close-x: 65px;
@close-y: 95px;
@close-offset-x: -65px;
@close-offset-y: -95px;
@close-width: 19px;
@close-height: 19px;
@close-total-width: 167px;
@close-total-height: 136px;
@close-image: '../img/sprite.png';
@close: 65px 95px -65px -95px 19px 19px 167px 136px '../img/sprite.png' 'close';
@close-bl-name: 'closeBl';
@close-bl-x: 84px;
@close-bl-y: 95px;
@close-bl-offset-x: -84px;
@close-bl-offset-y: -95px;
@close-bl-width: 19px;
@close-bl-height: 19px;
@close-bl-total-width: 167px;
@close-bl-total-height: 136px;
@close-bl-image: '../img/sprite.png';
@close-bl: 84px 95px -84px -95px 19px 19px 167px 136px '../img/sprite.png' 'closeBl';
@mail-name: 'mail';
@mail-x: 0px;
@mail-y: 71px;
@mail-offset-x: 0px;
@mail-offset-y: -71px;
@mail-width: 65px;
@mail-height: 65px;
@mail-total-width: 167px;
@mail-total-height: 136px;
@mail-image: '../img/sprite.png';
@mail: 0px 71px 0px -71px 65px 65px 167px 136px '../img/sprite.png' 'mail';
@mail-sm-name: 'mailSm';
@mail-sm-x: 120px;
@mail-sm-y: 95px;
@mail-sm-offset-x: -120px;
@mail-sm-offset-y: -95px;
@mail-sm-width: 20px;
@mail-sm-height: 13px;
@mail-sm-total-width: 167px;
@mail-sm-total-height: 136px;
@mail-sm-image: '../img/sprite.png';
@mail-sm: 120px 95px -120px -95px 20px 13px 167px 136px '../img/sprite.png' 'mailSm';
@menu-name: 'menu';
@menu-x: 89px;
@menu-y: 71px;
@menu-offset-x: -89px;
@menu-offset-y: -71px;
@menu-width: 24px;
@menu-height: 22px;
@menu-total-width: 167px;
@menu-total-height: 136px;
@menu-image: '../img/sprite.png';
@menu: 89px 71px -89px -71px 24px 22px 167px 136px '../img/sprite.png' 'menu';
@menu-arrow-name: 'menuArrow';
@menu-arrow-x: 138px;
@menu-arrow-y: 71px;
@menu-arrow-offset-x: -138px;
@menu-arrow-offset-y: -71px;
@menu-arrow-width: 25px;
@menu-arrow-height: 15px;
@menu-arrow-total-width: 167px;
@menu-arrow-total-height: 136px;
@menu-arrow-image: '../img/sprite.png';
@menu-arrow: 138px 71px -138px -71px 25px 15px 167px 136px '../img/sprite.png' 'menuArrow';
@menu-footer-name: 'menuFooter';
@menu-footer-x: 65px;
@menu-footer-y: 114px;
@menu-footer-offset-x: -65px;
@menu-footer-offset-y: -114px;
@menu-footer-width: 16px;
@menu-footer-height: 15px;
@menu-footer-total-width: 167px;
@menu-footer-total-height: 136px;
@menu-footer-image: '../img/sprite.png';
@menu-footer: 65px 114px -65px -114px 16px 15px 167px 136px '../img/sprite.png' 'menuFooter';
@search-name: 'search';
@search-x: 65px;
@search-y: 71px;
@search-offset-x: -65px;
@search-offset-y: -71px;
@search-width: 24px;
@search-height: 24px;
@search-total-width: 167px;
@search-total-height: 136px;
@search-image: '../img/sprite.png';
@search: 65px 71px -65px -71px 24px 24px 167px 136px '../img/sprite.png' 'search';
@service-name: 'service';
@service-x: 103px;
@service-y: 95px;
@service-offset-x: -103px;
@service-offset-y: -95px;
@service-width: 17px;
@service-height: 17px;
@service-total-width: 167px;
@service-total-height: 136px;
@service-image: '../img/sprite.png';
@service: 103px 95px -103px -95px 17px 17px 167px 136px '../img/sprite.png' 'service';
@whatsapp-name: 'whatsapp';
@whatsapp-x: 100px;
@whatsapp-y: 0px;
@whatsapp-offset-x: -100px;
@whatsapp-offset-y: 0px;
@whatsapp-width: 67px;
@whatsapp-height: 67px;
@whatsapp-total-width: 167px;
@whatsapp-total-height: 136px;
@whatsapp-image: '../img/sprite.png';
@whatsapp: 100px 0px -100px 0px 67px 67px 167px 136px '../img/sprite.png' 'whatsapp';
@spritesheet-width: 167px;
@spritesheet-height: 136px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @arrow @arrow-sm @arrow-white @call @close @close-bl @mail @mail-sm @menu @menu-arrow @menu-footer @search @service @whatsapp;
@spritesheet: 167px 136px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
